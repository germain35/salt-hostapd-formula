{%- from "hostapd/map.jinja" import hostapd with context -%}
{%- set interface_params = hostapd.interfaces.get('{}'.format(interface)) -%}

# global
#########################################
interface={{ interface }}
{%- for k, v in interface_params|dictsort %}
  {%- if k != 'access_points' %}
{{k}}={{v}}
  {%- endif %}
{%- endfor %}

# access points
#########################################
{#- don't break compatibility with old config format #}
{%- set ap_list_orig = interface_params.get('access_points', {}) %}
{%- set ap_list = ap_list_orig|dictsort if ap_list_orig is mapping else ap_list_orig %}
{%- for ap in ap_list %}
  {%- set ap_name = ap['ssid'] if ap is mapping else ap[0] %}
ssid={{ ap_name }}
  {%- set ap_params = ap if ap is mapping else ap[1] %}
  {%- for k, v in ap_params|dictsort %}
    {%- if k != 'ssid' %}
{{k}}={{v}}
    {%- endif %}
  {%- endfor %}
{%- endfor %}